inherit_from: .rubocop_todo.yml

require:
  - rubocop-performance
  - rubocop-rspec
  - rubocop-i18n

AllCops:
  Exclude:
    - 'lib/alexandria/default_preferences.rb'
    - 'pkg/**/*'
  TargetRubyVersion: 2.5

# Choose GetText-style I18n cops
GetText:
  Enabled: true
  # Exclude non-user-facing code
  Exclude:
    - Rakefile
    - 'util/**/*'
    - 'spec/**/*'
RailsI18n:
  Enabled: false

# This code has a lot of pre-existing translations with percent-style
# formatting. Maybe one day someone will re-do all of them ...
GetText/DecorateStringFormattingUsingPercent:
  Enabled: false

Layout/HashAlignment:
  EnforcedColonStyle: key
  EnforcedHashRocketStyle: table

# Be lenient with line length
Layout/LineLength:
  Max: 92

# Don't force lonely closing parentheses
Layout/MultilineMethodCallBraceLayout:
  EnforcedStyle: same_line

# Multi-line method calls should be simply indented. Aligning them makes it
# even harder to keep a sane line length.
Layout/MultilineMethodCallIndentation:
  EnforcedStyle: indented

# Multi-line assignment should be simply indented. Aligning them makes it even
# harder to keep a sane line length.
Layout/MultilineOperationIndentation:
  EnforcedStyle: indented

# Force consistent spacing independent of block contents
Layout/SpaceBeforeBlockBraces:
  EnforcedStyleForEmptyBraces: space

# Assume the programmer knows how bracketed block syntax works
Lint/AmbiguousBlockAssociation:
  Enabled: false

# Allow if (foo = get_foo) style
Lint/AssignmentInCondition:
  AllowSafeAssignment: true

# Blocks in specs can be any size
Metrics/BlockLength:
  Exclude:
    - 'spec/**/*'

Naming/AccessorMethodName:
  Enabled: false

# Avoid one-letter exception variable name
Naming/RescuedExceptionsVariableName:
  PreferredName: ex

# Allow and/or for control flow only
Style/AndOr:
  EnforcedStyle: conditionals

# Require at least two dependent lines before suggesting a guard clause
Style/GuardClause:
  MinBodyLength: 2

# Not all objects that handle #== 0 also handle #zero?
Style/NumericPredicate:
  Enabled: false

# Sometimes an if statement just looks better than next with a guard clause
Style/Next:
  Enabled: false

# Use older RuboCop default
Style/PercentLiteralDelimiters:
  PreferredDelimiters:
    '%W': ()
    '%w': ()

# Allow explicit return with multiple return values
Style/RedundantReturn:
  AllowMultipleReturnValues: true

Style/SingleLineBlockParams:
  Enabled: false

# Do not commit to use of interpolation
Style/StringLiterals:
  EnforcedStyle: double_quotes

# Prefer symbols to look like symbols
Style/SymbolArray:
  EnforcedStyle: brackets

# Project-specific configuration goes here.

# Accessors are only trivial if they match the ivar name.
Style/TrivialAccessors:
  ExactNameMatch: true

# Allow semantic choice of trailing comma
Style/TrailingCommaInArrayLiteral:
  Enabled: false

# Alexandria uses regular arrays
Style/WordArray:
  Enabled: false

# Not all objects that handle #length also handle #empty?
Style/ZeroLengthPredicate:
  Enabled: false

# Activate new cops from RuboCop 0.80 - 0.83
Layout/EmptyLinesAroundAttributeAccessor:
  Enabled: true
Layout/SpaceAroundMethodCallOperator:
  Enabled: true
Lint/RaiseException:
  Enabled: true
Lint/StructNewOverride:
  Enabled: true
Style/ExponentialNotation:
  Enabled: true
Style/HashEachMethods:
  Enabled: true
Style/HashTransformKeys:
  Enabled: true
Style/HashTransformValues:
  Enabled: true
Style/SlicingWithRange:
  Enabled: true
